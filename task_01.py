# -*- coding: utf-8 -*-
"""Task_01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WX-14_x6_gK4UGS0Bc4w_IO0kNWhZ_ZP
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import numpy as np
import matplotlib.pyplot as plt
from tkinter import filedialog
import joblib

# Open a file dialog to select the dataset file
file_path = filedialog.askopenfilename(title="Crop_Dataset")

# Load the dataset
data = pd.read_csv(file_path)

# Split the dataset into features (X) and target variable (y)
X = data.drop('Label_Encoded', axis=1)
X = X.drop('Label', axis=1)
y = data['Label_Encoded']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Decision Tree model
clf = DecisionTreeClassifier()

# Train the model on the training data
clf.fit(X_train, y_train)

# Make predictions on the testing data
y_pred_trs = clf.predict(X_train)

# Make predictions on the testing data
y_pred_ts = clf.predict(X_test)

# Calculate the accuracy of the model
train_set_accuracy = accuracy_score(y_train, y_pred_trs)
print(f'Accuracy of Decision Tree model training set: {train_set_accuracy}')
test_set_accuracy = accuracy_score(y_test, y_pred_ts)
print(f'Accuracy of Decision Tree model test set: {test_set_accuracy}')
y_test = np.array(y_test)
print(y_pred_ts)
print(y_test)

plt.figure(figsize=(10, 6))
plt.scatter(range(len(y_test)), y_test, label='test', color='blue', alpha=0.7)
plt.scatter(range(len(y_pred_ts)), y_pred_ts, label='predicted', color='red', alpha=0.5)
plt.grid()
plt.legend()
plt.title('Dicision tree')
plt.xlabel('n')
plt.ylabel('crop')
plt.show()

# Save the trained model as a joblib file
joblib.dump(clf, 'decision_tree_model.joblib')